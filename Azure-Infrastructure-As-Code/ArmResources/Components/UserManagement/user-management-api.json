{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsSaBaseUri": {
      "type": "string"
    },
    "artifactsSaSasToken": {
      "type": "securestring"
    },
    "settings": {
      "type": "Object",
      "metadata": {
        "description": "This is coming from the parameter File under Parameters"
      }
    },
    "resourceNames": {
      "type": "Object",
      "metadata": {
        "description": "This is coming from the parameter File under Parameters"
      }
    },
    "storageConnectionString": {
      "type": "securestring"
    },
    "appInsightsInstrumentationKey": {
      "type": "securestring"
    },
    "date": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "variables": {
    "keyvaultSecrets_uri": "[concat('@Microsoft.KeyVault(SecretUri=https://', parameters('resourceNames').appKeyVaultName, '.vault.azure.net/secrets/')]",
    "hostingPlanName": "[concat(parameters('resourceNames').hostingPlanBaseName,parameters('settings').userMgt.tag)]",
    "functionAppName": "[concat(parameters('resourceNames').functionAppBaseName,parameters('settings').userMgt.tag)]",
    "corsAllowURL": [
      "https://functions.azure.com",
      "https://functions-staging.azure.com",
      "https://functions-next.azure.com"
    ]
  },
  "resources": [
    {
      "name": "[concat('createUserMgtHostingPlan-', parameters('date'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('resourceNames').userMgtResourceGroupName]",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsSaBaseUri'), parameters('resourceNames').baseTemplatePath, 'template-function-hosting-plan.json', parameters('artifactsSaSasToken'))]"
        },
        "parameters": {
          "hostingPlanName": {
            "value": "[variables('hostingPlanName')]"
          },
          "location": {
            "value": "[parameters('settings').common.region]"
          },
          "skuTier": {
            "value": "[parameters('settings').userMgt.hostingPlanSku.tier]"
          },
          "skuName": {
            "value": "[parameters('settings').userMgt.hostingPlanSku.skuName]"
          }
        }
      }
    },
    {
      "name": "[concat('createUserMgtFunctionApp-', parameters('date'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('resourceNames').userMgtResourceGroupName]",
      "apiVersion": "2018-05-01",
      "dependsOn": [
        "[concat('createUserMgtHostingPlan-', parameters('date'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsSaBaseUri'), parameters('resourceNames').baseTemplatePath, 'template-function.json', parameters('artifactsSaSasToken'))]"
        },
        "parameters": {
          "artifactsSaBaseUri": {
            "value": "[parameters('artifactsSaBaseUri')]"
          },
          "artifactsSaSasToken": {
            "value": "[parameters('artifactsSaSasToken')]"
          },
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          },
          "location": {
            "value": "[parameters('settings').common.region]"
          },
          "corsAllowURL": {
            "value": "[variables('corsAllowURL')]"
          },
          "hostingPlanResourceId": {
            "value": "[reference(concat('createUserMgtHostingPlan-', parameters('date'))).outputs.hostingPlanResourceId.value]"
          },
          "appSettings": {
            "value": {
              "settings": [
                {
                  "name": "MSS_UserManagement_MSRAMetaData_DataSource",
                  "value": "test"
                },
                {
                  "name": "MSS_UserManagement_MSRAMetaData_Catalog",
                  "value": "msrmetadata"
                },
                {
                  "name": "MSS_UserManagement_MSRAMetaData_Client",
                  "value": "[concat('msssql',parameters('resourceNames').environment, 'user')]"
                },
                {
                  "name": "MSS_UserManagement_MSRAMetaData_Password",
                  "value": "[concat(variables('keyvaultSecrets_uri'), 'test','/)')]"
                },
                {
                  "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                  "value": "[if(parameters('settings').userMgt.isFirstDeployment, parameters('storageConnectionString'), concat(variables('keyvaultSecrets_uri'), 'kv-', parameters('resourceNames').diagnosysStorageAccountName, '-ConnectionString', '/)'))]"
                },
                {
                  "name": "AzureWebJobsDashboard",
                  "value": "[if(parameters('settings').userMgt.isFirstDeployment, parameters('storageConnectionString'), concat(variables('keyvaultSecrets_uri'), 'kv-', parameters('resourceNames').diagnosysStorageAccountName, '-ConnectionString', '/)'))]"
                },
                {
                  "name": "AzureWebJobsStorage",
                  "value": "[if(parameters('settings').userMgt.isFirstDeployment, parameters('storageConnectionString'), concat(variables('keyvaultSecrets_uri'), 'kv-', parameters('resourceNames').diagnosysStorageAccountName, '-ConnectionString', '/)'))]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[parameters('appInsightsInstrumentationKey')]"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[concat('InstrumentationKey=', parameters('appInsightsInstrumentationKey'))]"
                },
                {
                  "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                  "value": "~2"
                },
                {
                  "name": "WEBSITE_CONTENTSHARE",
                  "value": "[toLower(variables('functionAppName'))]"
                },
                {
                  "name": "FUNCTIONS_EXTENSION_VERSION",
                  "value": "~3"
                },
                {
                  "name": "WEBSITE_NODE_DEFAULT_VERSION",
                  "value": "8.11.1"
                },
                {
                  "name": "WEBSITE_LOAD_CERTIFICATES",
                  "value": "*"
                },
                {
                  "name": "FUNCTIONS_WORKER_RUNTIME",
                  "value": "dotnet"
                },
                {
                  "name": "AZURE_FUNCTIONS_ENVIRONMENT",
                  "value": "[toUpper(parameters('resourceNames').environment)]"
                },
                {
                  "name": "Environment",
                  "value": "[parameters('resourceNames').environment]"
                }
              ]
            }
          },
          "keyVaultName": {
            "value": "[parameters('resourceNames').appKeyVaultName]"
          },
          "keyVaultResourceGroupName": {
            "value": "[parameters('resourceNames').commonResourceGroupName]"
          }
        }
      }
    },
    {
      "name": "[concat('addFunctionAppKeyvaultPermissions-', parameters('date'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('resourceNames').commonResourceGroupName]",
      "apiVersion": "2018-05-01",
      "dependsOn": [
        "[concat('createUserMgtFunctionApp-', parameters('date'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsSaBaseUri'), parameters('resourceNames').baseTemplatePath, 'template-keyVault-permissions.json', parameters('artifactsSaSasToken'))]"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('resourceNames').appKeyVaultName]"
          },
          "ObjectIdToGrantAccess": {
            "value": "[reference(concat('createUserMgtFunctionApp-', parameters('date'))).outputs.functionObjectId.value]"
          },
          "keysPermissions": {
            "value": [ "list", "get" ]
          }
        }
      }
    }
  ],
  "outputs": {
  }
}
